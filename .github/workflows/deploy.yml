name: Deploy

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  deploy-xpi-extension-build-file:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: 'web-extension'

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.2

      - name: Create env.ts
        shell: bash
        env:
          GOOGLE_OAUTH_CLIENT_ID: ${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}
        run: |
          echo "export const BACKEND_URL = 'http://contexto-transletto.bstrama.com/api'; \
                export const GOOGLE_OAUTH_CLIENT_ID = '$GOOGLE_OAUTH_CLIENT_ID';" > ./web-extension/env.ts

      - name: Setup pnpm
        uses: pnpm/action-setup@v4.0.0
        with:
          version: 9

      - name: Install npm dependencies
        run: pnpm i -C ./web-extension

      - name: Build extension for firefox
        run: pnpm -C ./web-extension app:firefox

      - name: "web-ext build"
        id: web-ext-build
        uses: kewisch/action-web-ext@v1
        with:
          cmd: build
          source: ./web-extension/dist
          ignoreFiles: '[ "package.json","package-lock.json","yarn.lock" ]'

      - name: Sign web extension
        id: web-ext-sign
        uses: kewisch/action-web-ext@v1
        with:
          cmd: sign
          filename: "firefox-{name}-{version}.xpi"
          source: ${{ steps.web-ext-build.outputs.target }}
          channel: unlisted
          apiKey: ${{ secrets.AMO_SIGN_KEY }}
          apiSecret: ${{ secrets.AMO_SIGN_SECRET }}

      - name: Upload release file
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ${{ steps.web-ext-sign.outputs.target }}

  deploy-backend:
    runs-on: self-hosted
    
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: 'back-end'
      - name: Build Docker image
        run: docker build -t contexto-transletto-backend ./back-end

      - name: Stop and remove existing container
        run: |
          if [ $(docker ps -q -f name=contexto-transletto-backend) ]; then
            docker stop contexto-transletto-backend
          fi
          if [ $(docker ps -aq -f name=contexto-transletto-backend) ]; then
            docker rm contexto-transletto-backend
          fi
      - name: Run Docker container
        shell: bash
        env: 
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          GOOGLE_OAUTH_CLIENT_ID: ${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}
        run: |
          docker run -d \
            -e GEMINI_API_KEY=$GEMINI_API_KEY \
            -e JWT_SECRET=$JWT_SECRET \
            -e GOOGLE_OAUTH_CLIENT_ID=$GOOGLE_OAUTH_CLIENT_ID \
            --restart unless-stopped \
            --name contexto-transletto-backend \
            -p 5001:3000 contexto-transletto-backend
